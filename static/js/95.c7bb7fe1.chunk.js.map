{"version":3,"file":"static/js/95.c7bb7fe1.chunk.js","mappings":"iMAEaA,EAAOC,EAAAA,GAAAA,GAAH,sN,mBCGXC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,6CAiBhB,EAbkB,SAAC,GAA0B,IAAxBG,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAEzB,OACI,SAACL,EAAD,UACKI,EAAOE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,MACc,MAAtBH,EAASI,UACP,SAACP,EAAD,CAAqBQ,GAAE,iBAAYH,GAAMI,MAAO,CAAEC,KAAMP,GAAxD,SAAqEG,GAApDD,IACjB,SAACL,EAAD,CAAqBQ,GAAE,UAAKH,GAAMI,MAAO,CAAEC,KAAMP,GAAjD,SAA8DG,GAA7CD,EAHX,KAOvB,C,wJClBYM,E,QAAQZ,GAAAA,GAAH,iF,mBC+BlB,EA1Ba,WACT,OAA4Ca,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMX,GAAWY,EAAAA,EAAAA,MAEXC,EAAiB,mCAAG,iHAEKC,EAAAA,EAAAA,sBAFL,gBAEVC,EAFU,EAEVA,KACFC,EAAsBD,EAAKE,QAAQhB,KAAI,kBAA4B,CAAEC,GAA9B,EAAGA,GAA+BC,eAAlC,EAAOA,eAAP,IAC7CQ,EAAkBK,GAJA,gDAMlBE,QAAQC,IAAI,KAAMC,SANA,yDAAH,qDAcvB,OAJAC,EAAAA,EAAAA,YAAU,WACNR,GACH,GAAE,KAGC,iCACI,SAACL,EAAD,UAAO,oBACP,SAACc,EAAA,EAAD,CAAWvB,OAAQW,EAAgBV,SAAUA,MAGxD,C,kEC9BKuB,EAAW,8BAEXC,EAAU,CACZC,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACRC,cAAe,+NAKjBC,EAAmB,mCAAG,uGAEPC,EAAAA,EAAAA,IAAA,UAAaP,EAAb,8CAAmEC,GAF5D,8EAId,IAAIO,MAAM,KAAMX,SAJF,wDAAH,qDAQnBY,EAAc,mCAAG,WAAOC,GAAP,0FAEFH,EAAAA,EAAAA,IAAA,UAAaP,EAAb,mBAAgCU,EAAhC,0BAAiET,GAF/D,8EAIT,IAAIO,MAAM,KAAMX,SAJP,wDAAH,sDAQdc,EAAa,mCAAG,WAAOD,GAAP,0FAEDH,EAAAA,EAAAA,IAAA,UAAaP,EAAb,mBAAgCU,EAAhC,kCAAyET,GAFxE,8EAIR,IAAIO,MAAM,KAAMX,SAJR,wDAAH,sDAQbe,EAAe,mCAAG,WAAOF,GAAP,0FAEHH,EAAAA,EAAAA,IAAA,UAAaP,EAAb,mBAAgCU,EAAhC,kCAAyET,GAFtE,8EAIV,IAAIO,MAAM,KAAMX,SAJN,wDAAH,sDAQfgB,EAAsB,mCAAG,WAAOC,GAAP,0FAEVP,EAAAA,EAAAA,IAAA,UAAaP,EAAb,gCAA6Cc,EAA7C,8CAAkGb,GAFxF,8EAIjB,IAAIO,MAAM,KAAMX,SAJC,wDAAH,sDAStBN,EAAM,CACRe,oBAAAA,EACAG,eAAAA,EACAE,cAAAA,EACAC,gBAAAA,EACAC,uBAAAA,GAGJ,K","sources":["components/MovieList/styled.js","components/MovieList/MovieList.jsx","pages/Home/styled.js","pages/Home/Home.jsx","services/themoviedb-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n    margin-bottom: 5px;\n    display: flex;\n    gap: 5px;\n    flex-direction: column;\n    font-weight: 700;\n    padding: 15px 15px 15px 35px;\n    background-color: rgb(213, 213, 221);\n`; ","import { List } from './styled';\nimport styled from 'styled-components';\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nconst StyledLink = styled(Link)`\n    color: #021a5f;\n`;\n\nconst MovieList = ({ movies, location }) => {\n    //console.log(location.pathname); //    якщо батько - Home: '/'; якщо батько - Movies: '/movies'     \n    return (\n        <List>\n            {movies.map(({ id, original_title }) => (\n                location.pathname === '/' \n                ? <StyledLink key={id} to={`movies/${id}`} state={{ from: location }}>{original_title}</StyledLink> \n                : <StyledLink key={id} to={`${id}`} state={{ from: location }}>{original_title}</StyledLink>       \n            ))}  \n        </List>\n    )\n}\n\nexport default MovieList;\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.shape ({\n        id: PropTypes.number.isRequired,\n        original_title: PropTypes.string.isRequired,\n    })),\n};","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n    padding-left: 35px;\n    color: rgb(205, 205, 223);\n`; ","import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport api from '../../services/themoviedb-api';\nimport { Title } from \"./styled\";\nimport MovieList from \"../../components/MovieList/MovieList\";\n\n\nconst Home = () => {\n    const [trendingMovies, setTrendingMovies] = useState([]);\n    const location = useLocation();\n    \n    const getTrendingMovies = async () => {     // основна ф-ція запиту на бекенд\n        try {\n            const { data } = await api.fetchTrendingMovies();   // запит на бекенд і відповідь\n            const filteredApiResponse = data.results.map(({ id, original_title}) => ({ id, original_title })); //shorthand; усі властивості не потрібні\n            setTrendingMovies(filteredApiResponse); // запис в стейт відфільтрованих фільмів\n        } catch(error) {\n            console.log(error.message); \n        }\n    }\n      \n    useEffect(() => {\n        getTrendingMovies();\n    }, []);\n\n    return (\n        <>\n            <Title>Trending today</Title>\n            <MovieList movies={trendingMovies} location={location} />\n        </>\n    );\n}\n\nexport default Home;","import axios from \"axios\";\nconst BASE_URL = 'https://api.themoviedb.org/';\n\nconst options = { // загальні параметри для усіх запитів на бекенд\n    method: 'GET',\n    headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNDI1MGEwMzgzN2JjMWM0MGFkYTM4YjY3YjQxMzRlMyIsInN1YiI6IjY0N2FmOGQ2ZTMyM2YzMDBjNDI5ZDU1YiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.v-u6MiKiDbohMjislfmvIWqj_E9JTpeDNp3nEaFfpD0'\n    }\n};\n\n\nconst fetchTrendingMovies = async () => {\n    try {\n        return await axios.get(`${BASE_URL}3/trending/movie/day?language=en-US&page=1`, options); \n    } catch(error) {\n        throw new Error(error.message);\n    }\n}\n\nconst fetchMovieByID = async (movieID) => {\n    try {\n        return await axios.get(`${BASE_URL}3/movie/${movieID}?language=en-US&page=1`, options); \n    } catch(error) {\n        throw new Error(error.message);\n    }\n}\n\nconst fetchCastByID = async (movieID) => {\n    try {\n        return await axios.get(`${BASE_URL}3/movie/${movieID}/credits?language=en-US&page=1`, options); \n    } catch(error) {\n        throw new Error(error.message);\n    }\n}\n\nconst fetchReviewByID = async (movieID) => {\n    try {\n        return await axios.get(`${BASE_URL}3/movie/${movieID}/reviews?language=en-US&page=1`, options); \n    } catch(error) {\n        throw new Error(error.message);\n    }\n}\n\nconst fetchCollectionByQuery = async (keyword) => {\n    try {\n        return await axios.get(`${BASE_URL}3/search/movie?query=${keyword}&include_adult=false&language=en-US&page=1`, options); \n    } catch(error) {\n        throw new Error(error.message);\n    }\n}\n\n\nconst api = {\n    fetchTrendingMovies,\n    fetchMovieByID,\n    fetchCastByID,\n    fetchReviewByID,\n    fetchCollectionByQuery,\n};\n\nexport default api;"],"names":["List","styled","StyledLink","Link","movies","location","map","id","original_title","pathname","to","state","from","Title","useState","trendingMovies","setTrendingMovies","useLocation","getTrendingMovies","api","data","filteredApiResponse","results","console","log","message","useEffect","MovieList","BASE_URL","options","method","headers","accept","Authorization","fetchTrendingMovies","axios","Error","fetchMovieByID","movieID","fetchCastByID","fetchReviewByID","fetchCollectionByQuery","keyword"],"sourceRoot":""}