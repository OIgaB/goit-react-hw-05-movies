{"version":3,"file":"static/js/517.a934d46e.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MovieCard/MovieCard.jsx","components/pages/MovieDetails/MovieDetails.jsx","services/themoviedb-api.js"],"sourcesContent":["//Компонент спінера відображається, доки відбувається завантаження зображень. \n\nimport { ProgressBar } from  'react-loader-spinner';\n\n\nconst Loader = () => {\n    return (\n        <ProgressBar\n            height=\"90\"\n            width=\"90\"\n            ariaLabel=\"progress-bar-loading\"\n            wrapperStyle={{\n                position: 'fixed',\n                top: '20%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n            }}\n            wrapperClass=\"progress-bar-wrapper\"\n            borderColor = '#f4e02e'\n            barColor = '#515dff'\n        />\n    );\n};\n\nexport default Loader;","const MovieCard = ({ movie }) => {  \n    const { original_title, genres, overview, poster_path, vote_average, release_date } = movie;  //id        \n    const date = new Date(release_date); // конвертація дати з 2023-03-02 в Thu Mar 02 2023 02:00:00 GMT+0200 щоб потім дістати рік\n\n        return (\n        <>\n            <h2 className=\"visually-hidden\">Selected Movie</h2>\n            <section>\n                {poster_path && <img alt=\"movie poster\" src={`https://image.tmdb.org/t/p/original/${poster_path}`} width='250'/>}\n                <h3>{original_title}</h3>\n                <p>({date.getFullYear()})</p>\n                {vote_average && \n                    <p>User Score: \n                        <span>{vote_average.toFixed(1) * 10}%</span>   {/* toFixed округлення дробових чисел (після коми 1 цифра)   */}\n                    </p>\n                }  \n                <h4>Overview</h4>\n                <p>{overview}</p>\n                <h4>Genres</h4>\n                <p>{genres && genres.map(genre => genre.name).join(\", \")}</p>\n            </section>\n        </>\n    );\n}\n\nexport default MovieCard;\n\n","import { useState, useEffect } from \"react\"; \nimport { useLocation, useNavigate, useParams, Link, Outlet } from \"react-router-dom\";\nimport api from '../../../services/themoviedb-api';\nimport MovieCard from '../../MovieCard/MovieCard';\nimport Loader from \"components/Loader/Loader\";\nimport { Suspense } from 'react';\n\n\nconst  MovieDetails = () => {\n    const [movie, setMovie] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const { movieId } = useParams();\n    const navigate = useNavigate();\n    const locationDetails = useLocation();\n\n      \n    useEffect(() => {\n        const getMovieByID = async () => {     // основна ф-ція запиту на бекенд\n            setLoading(true);\n            try {\n                const { data } = await api.fetchMovieByID(movieId);   // запит на бекенд і відповідь\n                const filteredApiResponse = [data].map(({ id, original_title, genres, overview, poster_path, vote_average, release_date}) => ({ id, original_title, genres, overview, poster_path, vote_average, release_date })); //shorthand; усі властивості не потрібні\n                setMovie(...filteredApiResponse); // запис в стейт відфільтрованих даних про фільм\n            } catch(error) {\n              console.log(error.message); \n            } finally {\n                setLoading(false);\n            }\n        }\n        getMovieByID();\n\n    }, [movieId]);\n\n    const handleClick = () => {\n        navigate(locationDetails.state ?? '/')\n    };\n\n return (\n    <>\n        <button type=\"button\" onClick={handleClick}>Go back</button>\n        { loading && <Loader /> }\n        <MovieCard movie={movie} />\n        <ul>\n            <li>\n                <Link to='cast'>Cast</Link>   \n            </li>\n            <li>\n                <Link to='reviews'>Reviews</Link>\n            </li>       \n        </ul>\n        <Suspense fallback={<div>Loadin...</div>}>\n            <Outlet/>\n        </Suspense>\n    </>\n )\n}\n\nexport default MovieDetails;","import axios from \"axios\";\nconst BASE_URL = 'https://api.themoviedb.org/';\n\nconst options = { // загальні параметри для усіх запитів на бекенд\n    method: 'GET',\n    headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNDI1MGEwMzgzN2JjMWM0MGFkYTM4YjY3YjQxMzRlMyIsInN1YiI6IjY0N2FmOGQ2ZTMyM2YzMDBjNDI5ZDU1YiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.v-u6MiKiDbohMjislfmvIWqj_E9JTpeDNp3nEaFfpD0'\n    }\n};\n\n\nconst fetchTrendingMovies = async () => {\n    try {\n        return await axios.get(`${BASE_URL}3/trending/movie/day?language=en-US&page=1`, options); \n    } catch(error) {\n        throw new Error(error.message);\n    }\n}\n\nconst fetchMovieByID = async (movieID) => {\n    try {\n        return await axios.get(`${BASE_URL}3/movie/${movieID}?language=en-US&page=1`, options); \n    } catch(error) {\n        throw new Error(error.message);\n    }\n}\n\nconst fetchCastByID = async (movieID) => {\n    try {\n        return await axios.get(`${BASE_URL}3/movie/${movieID}/credits?language=en-US&page=1`, options); \n    } catch(error) {\n        throw new Error(error.message);\n    }\n}\n\nconst fetchReviewByID = async (movieID) => {\n    try {\n        return await axios.get(`${BASE_URL}3/movie/${movieID}/reviews?language=en-US&page=1`, options); \n    } catch(error) {\n        throw new Error(error.message);\n    }\n}\n\nconst fetchCollectionByQuery = async (keyword) => {\n    try {\n        return await axios.get(`${BASE_URL}3/search/movie?query=${keyword}&include_adult=false&language=en-US&page=1`, options); \n    } catch(error) {\n        throw new Error(error.message);\n    }\n}\n\n\nconst api = {\n    fetchTrendingMovies,\n    fetchMovieByID,\n    fetchCastByID,\n    fetchReviewByID,\n    fetchCollectionByQuery,\n};\n\nexport default api;"],"names":["height","width","ariaLabel","wrapperStyle","position","top","left","transform","wrapperClass","borderColor","barColor","movie","original_title","genres","overview","poster_path","vote_average","release_date","date","Date","className","alt","src","getFullYear","toFixed","map","genre","name","join","useState","setMovie","loading","setLoading","movieId","useParams","navigate","useNavigate","locationDetails","useLocation","useEffect","getMovieByID","api","data","filteredApiResponse","id","console","log","message","type","onClick","state","Loader","to","Suspense","fallback","BASE_URL","options","method","headers","accept","Authorization","fetchTrendingMovies","axios","Error","fetchMovieByID","movieID","fetchCastByID","fetchReviewByID","fetchCollectionByQuery","keyword"],"sourceRoot":""}