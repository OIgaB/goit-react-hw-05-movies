{"version":3,"file":"static/js/544.f827db9f.chunk.js","mappings":"wQAMMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6CAoChB,UA/Ba,WACT,OAA4CE,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAiB,mCAAG,iHAEKC,EAAAA,EAAAA,sBAFL,gBAEVC,EAFU,EAEVA,KACFC,EAAsBD,EAAKE,QAAQC,KAAI,kBAA4B,CAAEC,GAA9B,EAAGA,GAA+BC,eAAlC,EAAOA,eAAP,IAC7CV,EAAkBM,GAJA,gDAMpBK,QAAQC,IAAI,KAAMC,SANE,yDAAH,qDAevB,OALAC,EAAAA,EAAAA,YAAU,WACNX,GACH,GAAE,KAIC,iCACA,SAAC,IAAD,UAAO,oBACP,SAAC,IAAD,UACKJ,EAAeS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OAChB,SAACf,EAAD,CAAqBoB,GAAE,iBAAYN,GAAMO,MAAO,CAAEC,KAAMhB,GAAxD,SAAqES,GAApDD,EADD,QAM/B,C,wGCtCYS,EAAQtB,EAAAA,GAAAA,GAAH,iFAKLuB,EAAOvB,EAAAA,GAAAA,GAAH,qN,kECNXwB,EAAW,8BAEXC,EAAU,CACZC,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACRC,cAAe,+NAKjBC,EAAmB,mCAAG,uGAEPC,EAAAA,EAAAA,IAAA,UAAaP,EAAb,8CAAmEC,GAF5D,8EAId,IAAIO,MAAM,KAAMf,SAJF,wDAAH,qDAQnBgB,EAAc,mCAAG,WAAOC,GAAP,0FAEFH,EAAAA,EAAAA,IAAA,UAAaP,EAAb,mBAAgCU,EAAhC,0BAAiET,GAF/D,8EAIT,IAAIO,MAAM,KAAMf,SAJP,wDAAH,sDAQdkB,EAAa,mCAAG,WAAOD,GAAP,0FAEDH,EAAAA,EAAAA,IAAA,UAAaP,EAAb,mBAAgCU,EAAhC,kCAAyET,GAFxE,8EAIR,IAAIO,MAAM,KAAMf,SAJR,wDAAH,sDAQbmB,EAAe,mCAAG,WAAOF,GAAP,0FAEHH,EAAAA,EAAAA,IAAA,UAAaP,EAAb,mBAAgCU,EAAhC,kCAAyET,GAFtE,8EAIV,IAAIO,MAAM,KAAMf,SAJN,wDAAH,sDAQfoB,EAAsB,mCAAG,WAAOC,GAAP,0FAEVP,EAAAA,EAAAA,IAAA,UAAaP,EAAb,gCAA6Cc,EAA7C,8CAAkGb,GAFxF,8EAIjB,IAAIO,MAAM,KAAMf,SAJC,wDAAH,sDAStBT,EAAM,CACRsB,oBAAAA,EACAG,eAAAA,EACAE,cAAAA,EACAC,gBAAAA,EACAC,uBAAAA,GAGJ,K","sources":["pages/Home/Home.jsx","pages/Home/styled.js","services/themoviedb-api.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport api from '../../services/themoviedb-api';\nimport { Title, List } from \"./styled\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled(Link)`\n    color: #021a5f;\n`;\n\n\nconst Home = () => {\n    const [trendingMovies, setTrendingMovies] = useState([]);\n    const location = useLocation();\n\n    const getTrendingMovies = async () => {     // основна ф-ція запиту на бекенд\n        try {\n            const { data } = await api.fetchTrendingMovies();   // запит на бекенд і відповідь\n            const filteredApiResponse = data.results.map(({ id, original_title}) => ({ id, original_title })); //shorthand; усі властивості не потрібні\n            setTrendingMovies(filteredApiResponse); // запис в стейт відфільтрованих фільмів\n        } catch(error) {\n          console.log(error.message); \n        }\n      }\n      \n    useEffect(() => {\n        getTrendingMovies();\n    }, []);\n\n\n    return (\n        <>\n        <Title>Trending today</Title>\n        <List>\n            {trendingMovies.map(({ id, original_title }) => (\n                <StyledLink key={id} to={`movies/${id}`} state={{ from: location }}>{original_title}</StyledLink>     // <li> \n            ))}\n        </List>\n        </>\n    )\n}\n\nexport default Home;","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n    padding-left: 35px;\n    color: rgb(205, 205, 223);\n`; \n\nexport const List = styled.ul`\n    margin-bottom: 5px;\n    display: flex;\n    gap: 5px;\n    flex-direction: column;\n    font-weight: 700;\n    padding: 15px 15px 15px 35px;\n    background-color: rgb(213, 213, 221);\n`; ","import axios from \"axios\";\nconst BASE_URL = 'https://api.themoviedb.org/';\n\nconst options = { // загальні параметри для усіх запитів на бекенд\n    method: 'GET',\n    headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNDI1MGEwMzgzN2JjMWM0MGFkYTM4YjY3YjQxMzRlMyIsInN1YiI6IjY0N2FmOGQ2ZTMyM2YzMDBjNDI5ZDU1YiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.v-u6MiKiDbohMjislfmvIWqj_E9JTpeDNp3nEaFfpD0'\n    }\n};\n\n\nconst fetchTrendingMovies = async () => {\n    try {\n        return await axios.get(`${BASE_URL}3/trending/movie/day?language=en-US&page=1`, options); \n    } catch(error) {\n        throw new Error(error.message);\n    }\n}\n\nconst fetchMovieByID = async (movieID) => {\n    try {\n        return await axios.get(`${BASE_URL}3/movie/${movieID}?language=en-US&page=1`, options); \n    } catch(error) {\n        throw new Error(error.message);\n    }\n}\n\nconst fetchCastByID = async (movieID) => {\n    try {\n        return await axios.get(`${BASE_URL}3/movie/${movieID}/credits?language=en-US&page=1`, options); \n    } catch(error) {\n        throw new Error(error.message);\n    }\n}\n\nconst fetchReviewByID = async (movieID) => {\n    try {\n        return await axios.get(`${BASE_URL}3/movie/${movieID}/reviews?language=en-US&page=1`, options); \n    } catch(error) {\n        throw new Error(error.message);\n    }\n}\n\nconst fetchCollectionByQuery = async (keyword) => {\n    try {\n        return await axios.get(`${BASE_URL}3/search/movie?query=${keyword}&include_adult=false&language=en-US&page=1`, options); \n    } catch(error) {\n        throw new Error(error.message);\n    }\n}\n\n\nconst api = {\n    fetchTrendingMovies,\n    fetchMovieByID,\n    fetchCastByID,\n    fetchReviewByID,\n    fetchCollectionByQuery,\n};\n\nexport default api;"],"names":["StyledLink","styled","Link","useState","trendingMovies","setTrendingMovies","location","useLocation","getTrendingMovies","api","data","filteredApiResponse","results","map","id","original_title","console","log","message","useEffect","to","state","from","Title","List","BASE_URL","options","method","headers","accept","Authorization","fetchTrendingMovies","axios","Error","fetchMovieByID","movieID","fetchCastByID","fetchReviewByID","fetchCollectionByQuery","keyword"],"sourceRoot":""}